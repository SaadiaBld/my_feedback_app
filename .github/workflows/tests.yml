name: Python Tests

on:

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push: 
    branches: [ render ]

jobs:
  test:
    runs-on: ubuntu-latest

    # Keep Postgres service only if some tests need it; your Flask tests use sqlite :memory:
    services:
      postgres:
        image: postgres:13
        env:
          PYTHONPATH: .
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      PYTHONPATH: .
      ENV: test                    # <— avoids GCP setup during tests
      SECRET_KEY: testkey
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      GOOGLE_APPLICATION_CREDENTIALS_JSON: "{}"  # harmless; keeps code paths happy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # if you now have a single requirements.txt at repo root, prefer:
          # pip install -r requirements.txt
          pip install -r api/requirements.txt
          pip install -r app/requirements.txt
          pip install -r requirements-test.txt

      - name: Wait for PostgreSQL
        run: |
          for i in {1..20}; do
            pg_isready -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER" -d "$POSTGRES_DB" && break
            echo "Waiting for PostgreSQL..."
            sleep 3
          done

      - name: Run tests
        timeout-minutes: 10
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          pytest -vv --durations=10 --maxfail=1 \
          --timeout=30 --timeout-method=thread

      - name: Done
        run: echo "Tests completés."
